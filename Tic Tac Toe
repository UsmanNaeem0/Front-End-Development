<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #f0f0f0;
        }

        .game-title {
            color: #2c3e50;
            font-size: 2.5em;
            margin: 20px 0;
        }

        .game-status {
            font-size: 1.5em;
            margin: 20px 0;
            color: #2c3e50;
        }

        .game-board {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            background-color: #2c3e50;
            padding: 10px;
            border-radius: 10px;
        }

        .cell {
            width: 100px;
            height: 100px;
            background-color: white;
            border: none;
            border-radius: 5px;
            font-size: 3em;
            cursor: pointer;
            transition: background-color 0.3s;
            color: #2c3e50;
        }

        .cell:hover:not(:disabled) {
            background-color: #ecf0f1;
        }

        .cell:disabled {
            cursor: not-allowed;
        }

        .cell.x {
            color: #e74c3c;
        }

        .cell.o {
            color: #3498db;
        }

        .reset-button {
            margin-top: 20px;
            padding: 10px 20px;
            font-size: 1.2em;
            background-color: #2c3e50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .reset-button:hover {
            background-color: #34495e;
        }

        .score-board {
            margin-top: 20px;
            font-size: 1.2em;
            text-align: center;
            color: #2c3e50;
        }
    </style>
</head>
<body>
    <h1 class="game-title">Tic Tac Toe</h1>
    <div class="game-status" id="status">Player X's turn</div>
    <div class="game-board" id="board">
        <button class="cell" data-index="0"></button>
        <button class="cell" data-index="1"></button>
        <button class="cell" data-index="2"></button>
        <button class="cell" data-index="3"></button>
        <button class="cell" data-index="4"></button>
        <button class="cell" data-index="5"></button>
        <button class="cell" data-index="6"></button>
        <button class="cell" data-index="7"></button>
        <button class="cell" data-index="8"></button>
    </div>
    <div class="score-board">
        <div>Player X: <span id="score-x">0</span></div>
        <div>Player O: <span id="score-o">0</span></div>
        <div>Ties: <span id="score-ties">0</span></div>
    </div>
    <button class="reset-button" onclick="resetGame()">New Game</button>

    <script>
        let currentPlayer = 'X';
        let gameBoard = ['', '', '', '', '', '', '', '', ''];
        let gameActive = true;
        let scores = { X: 0, O: 0, ties: 0 };

        const winningCombinations = [
            [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows
            [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns
            [0, 4, 8], [2, 4, 6] // Diagonals
        ];

        document.querySelectorAll('.cell').forEach(cell => {
            cell.addEventListener('click', () => handleCellClick(cell));
        });

        function handleCellClick(cell) {
            const index = cell.getAttribute('data-index');

            if (gameBoard[index] !== '' || !gameActive) return;

            gameBoard[index] = currentPlayer;
            cell.textContent = currentPlayer;
            cell.classList.add(currentPlayer.toLowerCase());
            cell.disabled = true;

            if (checkWin()) {
                document.getElementById('status').textContent = `Player ${currentPlayer} wins!`;
                scores[currentPlayer]++;
                updateScoreBoard();
                gameActive = false;
                return;
            }

            if (checkDraw()) {
                document.getElementById('status').textContent = "It's a draw!";
                scores.ties++;
                updateScoreBoard();
                gameActive = false;
                return;
            }

            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
            document.getElementById('status').textContent = `Player ${currentPlayer}'s turn`;
        }

        function checkWin() {
            return winningCombinations.some(combination => {
                return combination.every(index => {
                    return gameBoard[index] === currentPlayer;
                });
            });
        }

        function checkDraw() {
            return gameBoard.every(cell => cell !== '');
        }

        function resetGame() {
            gameBoard = ['', '', '', '', '', '', '', '', ''];
            gameActive = true;
            currentPlayer = 'X';
            
            document.querySelectorAll('.cell').forEach(cell => {
                cell.textContent = '';
                cell.disabled = false;
                cell.classList.remove('x', 'o');
            });
            
            document.getElementById('status').textContent = "Player X's turn";
        }

        function updateScoreBoard() {
            document.getElementById('score-x').textContent = scores.X;
            document.getElementById('score-o').textContent = scores.O;
            document.getElementById('score-ties').textContent = scores.ties;
        }
    </script>
</body>
</html> 
